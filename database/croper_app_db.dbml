// Banco de dados: Plataforma Comercial app-crop
// Última revisão: 2025-05-07


//--------------------------------------------------------------
// BLOCO USERS
//--------------------------------------------------------------

Table users { 
  id bigint [pk, increment]
  name varchar
  email varchar [unique]
  email_verified_at timestamp
  password varchar
  remember_token varchar
  created_at timestamp
  updated_at timestamp
  role_id int [ref: > roles.id]
  observacoes text // Renomeado de userscol para observacoes por clareza
}

Table roles { 
  id int [pk, increment]
  name varchar //Vendedor, Gerente Comercial, Gerente Nacional, Administrador
}

Table gerente_vendedor {
  gerente_id bigint [ref: > users.id] // Renomeado para clareza
  vendedor_id bigint [ref: > users.id] // Renomeado para clareza
  indexes {
    (vendedor_id, gerente_id) [pk]
  }
}

//Tabela nativa do Laravel
Table password_reset_tokens {
  email varchar [pk]
  token varchar
  created_at timestamp
}

//Tabela nativa do Laravel
Table sessions {
  id varchar [pk]
  user_id bigint [ref: > users.id]
  ip_address varchar
  user_agent text
  payload longtext
  last_activity int
}

//--------------------------------------------------------------
// BLOCO PRODUTOS
//--------------------------------------------------------------

Table produtos {
  id int [pk, increment]
  classe_id int [ref: > produtos_classes.id] // renomeado para padrão _id
  principio_ativo_id int [ref: > principios_ativos.id]
  marca_comercial_id int [ref: > marcas_comerciais.id]
  tipo_peso_id int [ref: > unidades_peso.id] // renomeado tipo de tabela
  familia_id int [ref: > familias.id]
  apresentacao varchar
  dose_sugerida_hectare varchar
}

Table produtos_classes {
  id int [pk, increment]
  nome varchar
}

Table principios_ativos {
  id int [pk, increment]
  nome varchar
}

Table marcas_comerciais {
  id int [pk, increment]
  nome varchar
}

Table unidades_peso { //tabela renomeada
  id int [pk, increment]
  sigla varchar [unique] // ex: mg, g, kg, ton
  descricao varchar // ex: miligrama, grama, quilo, tonelada
}

Table familias { // Renomeado de familia para manter padrão plural
  id int [pk, increment]
  nome varchar // Renomeado de familia para nome
}

//--------------------------------------------------------------
// BLOCO NEGOCIAÇÕES
//--------------------------------------------------------------

Table pagamentos {
  id int [pk, increment]
  data_pagamento date
  data_entrega date
}

Table culturas {
  id int [pk, increment] // Adicionado ID para padronizar FK
  nome varchar [unique]
}

Table moedas {
  id int [pk, increment] // Adicionado ID para padronizar FK
  nome varchar [unique]
  sigla varchar
}

Table negociacoes {
  id int [pk, increment]
  versao date
  data_negocio date
  gerente_id bigint [ref: > users.id] // Renomeado de GRV
  representante_id bigint [ref: > users.id] // Renomeado de RTV
  cliente varchar
  endereco_cliente varchar
  cidade_cliente varchar
  observacoes text // Renomeado 
  data date // Alterado de varchar para date
  pagamento_id int [ref: > pagamentos.id] // Renomeado de data_pgto_contrato
  area_hectares float // Alterado de varchar
  inv_sacas_hectare float
  inv_total_sacas float
  preco_liquido_saca decimal(10,2)
  total_pedido decimal(12,2)
  nivel_validacao_id int [ref: > nivel_validacao.id]
  status_validacao_id bool
  status_defensivos bool
  status_especialidades bool
  status_negociacao_id int [ref: > status_negociacao.id]
  moeda_id int [ref: > moedas.id] // Ajustado para usar ID
  cultura_id int [ref: > culturas.id]
  grao_id int [ref: > graos.id]
}

Table nivel_validacao{
    id int [pk, increment]
    nome varchar //Gerente Comercial,Gerente Nacional, Administrador
}

Table status_negociacao {
    id int [pk, increment]
    nome varchar //Rascunho, Em análise, Cancelado, Aprovado, Não Aprovado, Concluido
    descricao text
}

Table negociacoes_produtos {
  negociacao_id int [ref: > negociacoes.id]
  produto_id int [ref: > produtos.id]
  volume float // Alterado de varchar
  potencial_produto float
  indexes {
    (negociacao_id, produto_id) [pk]
  }
}

Table pracas {
    id int [pk, increment]
    nome varchar
}

Table graos {
  id int [pk, increment]
  praca_id int [ref: > pracas.id]
  preco decimal(10,2)
  vencimento date
  moeda_id int [ref: > moedas.id]
  cultura_id int [ref: > culturas.id]
}

//--------------------------------------------------------------
// TABELAS TÉCNICAS (CACHE, JOBS ETC.)
//--------------------------------------------------------------

Table cache {
  key varchar [pk]
  value mediumtext
  expiration int
}

Table cache_locks {
  key varchar [pk]
  owner varchar
  expiration int
}

Table failed_jobs {
  id bigint [pk, increment]
  uuid varchar [unique]
  connection text
  queue text
  payload longtext
  exception longtext
  failed_at timestamp
}

Table job_batches {
  id varchar [pk]
  name varchar
  total_jobs int
  pending_jobs int
  failed_jobs int
  failed_job_ids longtext
  options mediumtext
  cancelled_at int
  created_at int
  finished_at int
}

Table jobs {
  id bigint [pk, increment]
  queue varchar
  payload longtext
  attempts tinyint
  reserved_at int
  available_at int
  created_at int
}

Table migrations {
  id int [pk, increment]
  migration varchar
  batch int
}


