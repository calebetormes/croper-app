// Banco de dados: Plataforma Comercial app-crop
// Última revisão: 2025-05-07


//--------------------------------------------------------------
// BLOCO USERS
//--------------------------------------------------------------

Table users { 
  id bigint [pk, increment]
  name varchar
  email varchar [unique]
  email_verified_at timestamp
  password varchar
  remember_token varchar
  created_at timestamp
  updated_at timestamp
  role_id int [ref: > roles.id]
  observacoes text // Renomeado de userscol para observacoes por clareza
}

Table gerentes_vendedores {
  gerente_id bigint [ref: > users.id]
  Vendedor_id bigint [ref: > users.id]
    indexes {
    (gerente_id, Vendedor_id) [pk]
  }
}

Table roles { 
  id int [pk, increment]
  name varchar //Vendedor, Gerente Comercial, Gerente Nacional, Administrador
}

//Tabela nativa do Laravel
Table password_reset_tokens {
  email varchar [pk]
  token varchar
  created_at timestamp
}

//Tabela nativa do Laravel
Table sessions {
  id varchar [pk]
  user_id bigint [ref: > users.id]
  ip_address varchar
  user_agent text
  payload longtext
  last_activity int
}

//--------------------------------------------------------------
// BLOCO PRODUTOS
//--------------------------------------------------------------

Table produtos {
  id int [pk, increment]
  classe_id int [ref: > produtos_classes.id] // renomeado para padrão _id
  principio_ativo_id int [ref: > principios_ativos.id]
  marca_comercial_id int [ref: > marcas_comerciais.id]
  tipo_peso_id int [ref: > unidades_peso.id] // renomeado tipo de tabela
  familia_id int [ref: > familias.id]
  apresentacao varchar
  dose_sugerida_hectare varchar
  preco_real_rs decimal(12,2)
  preco_virtual_rs decimal(12,2)
  preco_real_us decimal(12,2)
  preco_virtual_us decimal(12,2)
  custo_rs decimal(12,2)
}

Table produtos_classes {
  id int [pk, increment]
  nome varchar
}

Table principios_ativos {
  id int [pk, increment]
  nome varchar
}

Table marcas_comerciais {
  id int [pk, increment]
  nome varchar
}

Table unidades_peso { //tabela renomeada
  id int [pk, increment]
  sigla varchar [unique] // ex: mg, g, kg, ton
  descricao varchar // ex: miligrama, grama, quilo, tonelada
}

Table familias { // Renomeado de familia para manter padrão plural
  id int [pk, increment]
  nome varchar // Renomeado de familia para nome
}

//--------------------------------------------------------------
// BLOCO NEGOCIAÇÕES
//--------------------------------------------------------------

Table pagamentos {
  id int [pk, increment]
  data_pagamento date
  data_entrega date
}


Table culturas {
  id int [pk, increment] // Adicionado ID para padronizar FK
  nome varchar [unique]
  descricao varchar
}

Table moedas {
  id int [pk, increment] // Adicionado ID para padronizar FK
  nome varchar [unique]
  sigla varchar
}

Table pracas_cotacoes {
  id int [pk, increment]
  cidade varchar
  preco decimal(12,2)
  vencimento date
  preco_rs decimal(12,2)
  preco_us decimal(12,2)
  precos_congelados bool 
  data_atualizacao_precos date
  cultura_id int [ref:>culturas.id]
}

Table niveis_validacao{
    id int [pk, increment]
    nome varchar [unique] //Gerente Comercial,Gerente Nacional, Administrador
    ordem_validacao int
}

Table status_negociacoes {
    id int [pk, increment]
    nome varchar [unique] //Rascunho, Em análise, Cancelado, Aprovado, Não Aprovado, Concluido
    descricao text
}

Table negociacoes {
  id int [pk, increment]
  //
  data_versao date
  data_negocio date
  moeda_id int [ref: > moedas.id] // Ajustado para usar ID
  //
  gerente_id bigint [ref: > users.id] // Renomeado de GRV
  representante_id bigint [ref: > users.id] // Renomeado de RTV
  cliente varchar //Razão Social
  endereco_cliente varchar
  cidade_cliente varchar
  //
  cultura_id int [ref: > culturas.id]
  praca_cotacao_id int [ref: > pracas_cotacoes.id]
  pagamento_id int [ref: > pagamentos.id] // Renomeado de data_pgto_contrato
  data_entrega_graos date
  valor_total_com_bonus decimal(12,2) //FORMULA
  //
  area_hectares decimal(12,2)
  investimento_sacas_hectare decimal(12,2) //FORMULA
  investimento_total_sacas decimal(12,2) //FORMULA
  preco_liquido_saca decimal(12,2)// FORMULA
  bonus_cliente_pacote decimal(12,2) //FORMULA
  valor_total_sem_bonus decimal(12,2) //FORMULA

  //VALIDAÇÔES
  nivel_validacao_id int [ref: > niveis_validacao.id]
  status_validacao bool
  status_defensivos bool
  status_especialidades bool
  status_negociacao_id int [ref: > status_negociacoes.id]

  //SNAP DE PREÇOS DAS PRAÇAS
  praca_preco_rs decimal(12,2) //snapshot calculado de pracas_cotacoes
  praca_preco_us decimal(12,2) //snapshot calculado de pracas_cotacoes
  precos_congelados bool 
  data_atualizacao_precos date
  
  observacoes text // Renomeado 
}

Table negociacoes_produtos {
  negociacao_id int [ref: > negociacoes.id]
  produto_id int [ref: > produtos.id]
  volume decimal(12,2) // Alterado de varchar
  potencial_produto decimal(12,2) 
  dose_hectare decimal(12,2)

  //campos snapshop para os preços
  produto_preco_real_rs decimal(12,2) 
  produto_preco_real_us decimal(12,2) 
  produto_preco_virtual_rs decimal(12,2) 
  produto_preco_virtual_us decimal(12,2) 
  precos_congelados bool
  data_atualizacao_precos date
  indexes {
    (negociacao_id, produto_id) [pk]
  }
}

//--------------------------------------------------------------
// TABELAS TÉCNICAS (CACHE, JOBS ETC.)
//--------------------------------------------------------------

Table cache {
  key varchar [pk]
  value mediumtext
  expiration int
}

Table cache_locks {
  key varchar [pk]
  owner varchar
  expiration int
}

Table failed_jobs {
  id bigint [pk, increment]
  uuid varchar [unique]
  connection text
  queue text
  payload longtext
  exception longtext
  failed_at timestamp
}

Table job_batches {
  id varchar [pk]
  name varchar
  total_jobs int
  pending_jobs int
  failed_jobs int
  failed_job_ids longtext
  options mediumtext
  cancelled_at int
  created_at int
  finished_at int
}

Table jobs {
  id bigint [pk, increment]
  queue varchar
  payload longtext
  attempts tinyint
  reserved_at int
  available_at int
  created_at int
}

Table migrations {
  id int [pk, increment]
  migration varchar
  batch int
}
