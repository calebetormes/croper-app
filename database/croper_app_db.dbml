// Banco de dados: Plataforma Comercial app-crop
// Última revisão: 2025-05-07


//--------------------------------------------------------------
// BLOCO USERS
//--------------------------------------------------------------

Table users { 
  id bigint [pk, increment]
  name varchar
  email varchar [unique]
  email_verified_at timestamp
  password varchar
  remember_token varchar
  created_at timestamp
  updated_at timestamp
  role_id int [ref: > roles.id]
  observacoes text // Renomeado de userscol para observacoes por clareza
}

Table gerentes_vendedores {
  gerente_id bigint [ref: > users.id]
  vendedor_id bigint [ref: > users.id]
    indexes {
    (gerente_id, Vendedor_id) [pk]
  }
}

Table roles { 
  id int [pk, increment]
  name varchar //Vendedor, Gerente Comercial, Gerente Nacional, Administrador
}

//Tabela nativa do Laravel
Table password_reset_tokens {
  email varchar [pk]
  token varchar
  created_at timestamp
}

//Tabela nativa do Laravel
Table sessions {
  id varchar [pk]
  user_id bigint [ref: > users.id]
  ip_address varchar
  user_agent text
  payload longtext
  last_activity int
}

//--------------------------------------------------------------
// BLOCO PRODUTOS
//--------------------------------------------------------------

Table produtos {
  id int [pk, increment]
  classe_id int [ref: > produtos_classes.id] // renomeado para padrão _id
  principio_ativo_id int [ref: > principios_ativos.id]
  marca_comercial_id int [ref: > marcas_comerciais.id]
  tipo_peso_id int [ref: > unidades_peso.id] // renomeado tipo de tabela
  familia_id int [ref: > familias.id]
  apresentacao varchar
  dose_sugerida_hectare varchar
  preco_rs decimal(12,2)
  preco_us decimal(12,2)
  //preco_virtual_rs decimal(12,2)
  //preco_virtual_us decimal(12,2)
  custo_rs decimal(12,2)
  custo_us decimal(12,2)
  fator_multiplicador decimal(12,2) // Fator de multiplicação para o volume 
}

Table produtos_classes {
  id int [pk, increment]
  nome varchar
}

Table principios_ativos {
  id int [pk, increment]
  nome varchar
}

Table marcas_comerciais {
  id int [pk, increment]
  nome varchar
}

Table unidades_peso { //tabela renomeada
  id int [pk, increment]
  sigla varchar [unique] // ex: mg, g, kg, ton
  descricao varchar // ex: miligrama, grama, quilo, tonelada
}

Table familias { // Renomeado de familia para manter padrão plural
  id int [pk, increment]
  nome varchar // Renomeado de familia para nome
}

//--------------------------------------------------------------
// BLOCO NEGOCIAÇÕES
//--------------------------------------------------------------

Table pagamentos {
  id int [pk, increment]
  data_pagamento date
  data_entrega date
}


Table culturas {
  id int [pk, increment] // Adicionado ID para padronizar FK
  nome varchar [unique]
  descricao varchar
}

Table moedas {
  id int [pk, increment] // Adicionado ID para padronizar FK
  nome varchar [unique]
  sigla varchar
}

Table niveis_validacao{
    id int [pk, increment]
    nome varchar [unique] //Gerente Comercial,Gerente Nacional, Administrador
    ordem_validacao int
}

Table status_negociacoes {
    id int [pk, increment]
    nome varchar [unique] //Rascunho, Em análise, Cancelado, Aprovado, Não Aprovado, Concluido
    descricao text
    cor varchar // Ex: "#4CAF50" ou "bg-green-500"
    ordem int
    icone varchar // Ex: "check-circle", "x-circle"
    finaliza_negociacao boolean
    ativo boolean
}

Table pracas_cotacoes {
  id int [pk, increment]
  cidade varchar
  data_inclusao date
  data_vencimento date
  praca_cotacao_preco decimal (12,2)
  moeda_id int [ref: > moedas.id]
  cultura_id int [ref: > culturas.id]
  fator_valorizacao decimal (12,2)
}

//ALTERADO 
//lembrar de REMOVER FATOR DE VALORização no section pracas_cotacoes
Table negociacoes {
  id int [pk, increment]
  pedido_id int [unique]
  //
  data_versao date
  data_negocio date
  moeda_id int [ref: > moedas.id] // Ajustado para usar ID
  //
  gerente_id bigint [ref: > users.id] // Renomeado de GRV
  vendedor_id bigint [ref: > users.id] // Renomeado de RTV
  cliente varchar //Razão Social
  endereco_cliente varchar
  cidade_cliente varchar
  //
  cultura_id int [ref: > culturas.id]
  praca_cotacao_id int [ref: > pracas_cotacoes.id]
  pagamento_id int [ref: > pagamentos.id] // Renomeado de data_pgto_contrato
  dat
   
  //SNAP DE PREÇOS DAS PRAÇAS
  snap_praca_cotacao_preco decimal(12,2) //snapshot calculado de pracas_cotacoes
  snap_praca_cotacao_preco_fixado bool 
  data_atualizacao_snap_preco_praca_cotacao date

  //VALORES
  area_hectares decimal(12,2) //manual
  valor_total_pedido_rs decimal(12,2) //SOMA DOS snap_produto_preco_rs * VOLUME 
  valor_total_pedido_us decimal(12,2) //SOMA DOS snap_produto_preco_us * VOLUME
  valor_total_pedido_rs_valorizado decimal(12,2) //SOMA DOS (preco_produto_valorizado_rs * VOLUME) 
  valor_total_pedido_us_valorizado decimal(12,2) //SOMA DOS (preco_produto_valorizado_rs * VOLUME)
  
  
  
  //Deve ser feito uma verificação para ver se o pedido é em RS ou US
  //se for em RS, sera valor_total_pedido_rs dividido pelo preco_rs do produto
  //se for em US, sera valor_total_pedido_us dividido pelo preco_us do produto
  investimento_total_sacas decimal(12,2) //quantidade de investimento em sacas de 60 Kg será a seguinte conta: VALOR TOTAL DO PEDIDO / PREÇO DA SACA 60 KG
  
  investimento_sacas_hectare decimal(12,2) // investimento_total_sacas / area_hectares
  

  //valorização da saca
  indice_valorizacao_saca decimal(12,2) // media dos fatores de valorização dos produtos
  preco_liquido_saca decimal(12,2) //recebe da praca_cotacao_preco
  preco_liquido_saca_valorizado decimal(12,2) //snap_preco_liquido_saca * indice_valorizacao_saca

  bonus_cliente_pacote decimal(12,2) //
  peso_total_kg decimal(12,2) 
  
  //VALIDAÇÔES
  nivel_validacao_id int [ref: > niveis_validacao.id]
  status_validacao bool
  status_defensivos int
  status_especialidades int
  status_negociacao_id int [ref: > status_negociacoes.id]

  
  observacoes text // Renomeado 
  cotacao_moeda_usd_brl decimal (12,2)//para posterior pesquisa

}


//--------------------------------------------------------------
// ALTERADA
//--------------------------------------------------------------
Table negociacoes_produtos { 
  id int [pk, increment]
  negociacao_id int [ref: > negociacoes.id]
  produto_id int [ref: > produtos.id]
  volume decimal(12,2) // Alterado de varchar
  indice_valorizacao decimal(12,2) // Fator de valorização do produto na negociação

  //campos snapshop para os preços recebidos do produto editaveis manualmente
  snap_produto_preco_rs decimal(12,2) 
  snap_produto_preco_us decimal(12,2) 
  snap_custo_rs decimal(12,2) //AAAAA
  snap_custo_us decimal(12,2) //AAAAA
  //
  preco_produto_valorizado_rs decimal(12,2) // snap_produto_preco_rs * indice_valorização 
  preco_produto_valorizado_us decimal(12,2) // snap_produto_preco_us * indice_valorização
  
  data_atualizacao_snap_precos_produtos date
  negociacao_produto_fator_valorizacao decimal(12,2)

}

//--------------------------------------------------------------
// TABELAS TÉCNICAS (CACHE, JOBS ETC.)
//--------------------------------------------------------------

Table cache {
  key varchar [pk]
  value mediumtext
  expiration int
}

Table cache_locks {
  key varchar [pk]
  owner varchar
  expiration int
}

Table failed_jobs {
  id bigint [pk, increment]
  uuid varchar [unique]
  connection text
  queue text
  payload longtext
  exception longtext
  failed_at timestamp
}

Table job_batches {
  id varchar [pk]
  name varchar
  total_jobs int
  pending_jobs int
  failed_jobs int
  failed_job_ids longtext
  options mediumtext
  cancelled_at int
  created_at int
  finished_at int
}

Table jobs {
  id bigint [pk, increment]
  queue varchar
  payload longtext
  attempts tinyint
  reserved_at int
  available_at int
  created_at int
}

Table migrations {
  id int [pk, increment]
  migration varchar
  batch int
}
